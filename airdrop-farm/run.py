#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –¥–ª—è NT EXHAUST - CRYPTAL AI AUTO BOT
"""

import os
import sys
import argparse
from colorama import Fore, Style, init

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è colorama
init(autoreset=True)

def print_logo():
    """–í—ã–≤–µ—Å—Ç–∏ –ª–æ–≥–æ—Ç–∏–ø"""
    print(f"{Fore.CYAN}{'='*60}{Style.RESET_ALL}")
    print(f"{Fore.CYAN}{'NT EXHAUST - CRYPTAL AI AUTO BOT':^60}{Style.RESET_ALL}")
    print(f"{Fore.CYAN}{'Python Version':^60}{Style.RESET_ALL}")
    print(f"{Fore.CYAN}{'='*60}{Style.RESET_ALL}")
    print()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_logo()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    parser = argparse.ArgumentParser(description='NT EXHAUST - CRYPTAL AI Auto Bot')
    parser.add_argument('--mode', choices=['continuous', 'once'], default='continuous',
                       help='–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: continuous (–Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ) –∏–ª–∏ once (–æ–¥–∏–Ω —Ä–∞–∑)')
    parser.add_argument('--no-proxy', action='store_true',
                       help='–û—Ç–∫–ª—é—á–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏')
    parser.add_argument('--config', default='config.json',
                       help='–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏')
    
    args = parser.parse_args()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
    if sys.version_info < (3, 7):
        print(f"{Fore.RED}‚ùå –û—à–∏–±–∫–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7+. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {sys.version}{Style.RESET_ALL}")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    os.makedirs("data", exist_ok=True)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤
    if not os.path.exists("data/token.txt"):
        print(f"{Fore.YELLOW}‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª data/token.txt. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ —Ç–æ–∫–µ–Ω—ã.{Style.RESET_ALL}")
        with open("data/token.txt", "w") as f:
            f.write("# –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ —Ç–æ–∫–µ–Ω—ã —Å—é–¥–∞, –ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É\n")
    
    if not os.path.exists("data/proxy.txt"):
        print(f"{Fore.YELLOW}‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª data/proxy.txt. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–∫—Å–∏.{Style.RESET_ALL}")
        with open("data/proxy.txt", "w") as f:
            f.write("# –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–∫—Å–∏ —Å—é–¥–∞, –ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É\n# –§–æ—Ä–º–∞—Ç—ã: http://user:pass@host:port –∏–ª–∏ socks5://user:pass@host:port\n")
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    os.environ['RUN_MODE'] = args.mode
    
    if args.no_proxy:
        os.environ['NO_PROXY'] = '1'
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—É—Å–∫–µ
    print(f"{Fore.GREEN}üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ: {args.mode}{Style.RESET_ALL}")
    print(f"{Fore.GREEN}üìÅ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {args.config}{Style.RESET_ALL}")
    
    if args.no_proxy:
        print(f"{Fore.YELLOW}üåê –ü—Ä–æ–∫—Å–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã{Style.RESET_ALL}")
    
    print()
    
    # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
    try:
        import main
        import asyncio
        asyncio.run(main.main())
    except ImportError as e:
        print(f"{Fore.RED}‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}{Style.RESET_ALL}")
        print(f"{Fore.YELLOW}üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: pip install -r requirements.txt{Style.RESET_ALL}")
        sys.exit(1)
    except KeyboardInterrupt:
        print(f"\n{Fore.YELLOW}‚èπÔ∏è  –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º{Style.RESET_ALL}")
    except Exception as e:
        print(f"{Fore.RED}üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}{Style.RESET_ALL}")
        sys.exit(1)

if __name__ == "__main__":
    main()